---


- 
- name: Ensure Traefik paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "0750"
    owner: "{{ traefik_uid }}"
    group: "{{ traefik_gid }}"
  when: item.when | bool
  with_items:
  - path: "{{ traefik_base_path }}"
    when: true
  - path: "{{ traefik_config_dir_path }}"
    when: true
  - path: "{{ traefik_ssl_dir_path }}"
    when: "{{ traefik_ssl_dir_enabled }}"
  - path: "{{ traefik_plugins_dir_path }}"
    when: "{{ traefik_plugin_support_enabled }}"

- when: traefik_dashboard_basicauth_enabled | bool
  block:
  # We do this locally, so that we won't need passlib to be installed on the server.
  - name: Generate basic auth file locally
    community.general.htpasswd:
      path: "{{ traefik_dashboard_basicauth_file_tmp }}"
      name: "{{ traefik_dashboard_basicauth_user }}"
      password: "{{ traefik_dashboard_basicauth_password }}"
      mode: 640
    become: false
    delegate_to: 127.0.0.1

  - name: Load basic auth file contents
    ansible.builtin.slurp:
      src: "{{ traefik_dashboard_basicauth_file_tmp }}"
    become: false
    delegate_to: 127.0.0.1
    register: traefik_dashboard_basicauth_file_contents_raw

  - name: Load basic auth file contents
    ansible.builtin.set_fact:
      traefik_dashboard_basicauth_file_contents: "{{ traefik_dashboard_basicauth_file_contents_raw['content'] | b64decode | trim }}"

  - name: Ensure local temporary basic auth file is removed
    ansible.builtin.file:
      path: "{{ traefik_dashboard_basicauth_file_tmp }}"
      state: absent
    become: false
    delegate_to: 127.0.0.1

- name: Ensure Traefik support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ traefik_config_dir_path }}/{{ item }}"
    owner: "{{ traefik_uid }}"
    group: "{{ traefik_gid }}"
    mode: 640
  with_items:
  - env
  - labels

- name: Ensure traefik.yml installed
  ansible.builtin.copy:
    content: "{{ traefik_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ traefik_config_dir_path }}/traefik.yml"
    owner: "{{ traefik_uid }}"
    group: "{{ traefik_gid }}"
    mode: 640

- name: Ensure provider.yml installed
  ansible.builtin.copy:
    content: "{{ traefik_provider_configuration | to_nice_yaml(indent=2, width=999999) }}"
    dest: "{{ traefik_config_dir_path }}/provider.yml"
    owner: "{{ traefik_uid }}"
    group: "{{ traefik_gid }}"
    mode: 640

- name: Pull Traefik container image
  community.docker.docker_image:
    name: "{{ traefik_container_image }}"
    source: pull
  register: traefik_image_result
  retries: 3
  delay: 10
  until: traefik_image_result is succeeded

- name: Ensure Traefik Docker network exists
  community.docker.docker_network:
    name: "{{ traefik_container_network }}"
    driver: bridge

- name: Deploy Traefik container via Docker
  community.docker.docker_container:
    name: "{{ traefik_identifier }}"
    image: "{{ traefik_container_image }}"
    restart_policy: always
    published_ports:
    - "{{ traefik_container_web_host_bind_port }}:{{ traefik_config_entrypoint_web_port_in_container }}"
    - "{{ traefik_container_web_secure_host_bind_port }}:{{ traefik_config_entrypoint_web_secure_port_in_container }}"
    env_file: "{{ traefik_config_dir_path }}/env"
    networks:
    - name: "{{ traefik_container_network }}"
    mounts:
    - type: bind
      source: "{{ traefik_config_dir_path }}"
      target: /config
      read_only: true
    - type: bind
      source: "{{ traefik_ssl_dir_path }}"
      target: /ssl
      read_only: false
    - type: bind
      source: "{{ traefik_config_providers_docker_endpoint | regex_replace('^unix://', '') }}"
      target: "{{ traefik_config_providers_docker_endpoint | regex_replace('^unix://', '') }}"
      read_only: true
    command: "--configFile=/config/traefik.yml {{ traefik_process_extra_arguments | join(' ') }}"
  when: traefik_enabled | bool

- name: Ensure Traefik systemd service is installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/traefik.service.j2"
    dest: "/etc/systemd/system/{{ traefik_identifier }}.service"
    mode: "0644"
